[{"C:\\Users\\prate\\Desktop\\Sem 6\\Wishes-High-Rating-master\\Wishes-High-Rating-master\\src\\index.js":"1","C:\\Users\\prate\\Desktop\\Sem 6\\Wishes-High-Rating-master\\Wishes-High-Rating-master\\src\\App.jsx":"2","C:\\Users\\prate\\Desktop\\Sem 6\\Wishes-High-Rating-master\\Wishes-High-Rating-master\\src\\Rate.jsx":"3","C:\\Users\\prate\\Desktop\\Resume Projects\\Wishes-High-Rating-master\\src\\index.js":"4","C:\\Users\\prate\\Desktop\\Resume Projects\\Wishes-High-Rating-master\\src\\App.jsx":"5","C:\\Users\\prate\\Desktop\\Resume Projects\\Wishes-High-Rating-master\\src\\Rate.jsx":"6"},{"size":149,"mtime":1616173510000,"results":"7","hashOfConfig":"8"},{"size":140,"mtime":1616173510000,"results":"9","hashOfConfig":"8"},{"size":8400,"mtime":1616173510000,"results":"10","hashOfConfig":"8"},{"size":149,"mtime":1616173510000,"results":"11","hashOfConfig":"12"},{"size":140,"mtime":1616173510000,"results":"13","hashOfConfig":"12"},{"size":8402,"mtime":1668286946890,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16r1xez",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"152bz9g",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\prate\\Desktop\\Sem 6\\Wishes-High-Rating-master\\Wishes-High-Rating-master\\src\\index.js",[],"C:\\Users\\prate\\Desktop\\Sem 6\\Wishes-High-Rating-master\\Wishes-High-Rating-master\\src\\App.jsx",[],"C:\\Users\\prate\\Desktop\\Sem 6\\Wishes-High-Rating-master\\Wishes-High-Rating-master\\src\\Rate.jsx",["28","29","30","31","32","33","34","35","36"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nfunction Rate() {\n\n    const [userData, setUserData] = useState(null);\n    const [handle, setHandle] = useState('');\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [dataSet, toogleSet] = useState(false);\n    const [todoQues, setTodoQues] = useState({\n        name: '',\n        contestId: ''\n    });\n    const [removeQues, setRemoveQues] = useState({\n        name: '',\n        contestId: ''\n    });\n    //const [lo, setLogout] = useState(false);\n    const [toDoList, setToDoList] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    async function onSubmit(event) {\n        setLoading(true);\n        event.preventDefault();\n        var res = await callData(userName, password, handle);\n        setLoading(false);\n    }\n\n    function callData(userName, password, handle) {\n        let data = {\n            userName,\n            password,\n            handle\n        }\n        // var res = null;\n        var res = axios.post(\"http://localhost:5000/nrating\", data).then(response => {\n            res = {\n                userD: (response.data),\n                userName: userName\n            };\n        }).then(() => {\n            sessionStorage.setItem(\"userD\", JSON.stringify(res.userD));\n            sessionStorage.setItem(\"userName\", res.userName);\n            setUserData(res.userD);\n            setUserName(res.userName);\n            toogleSet(true);\n        })\n        // console.log(res);\n        return res;\n    }\n\n    useEffect(async () => {\n        let quesData = {\n            name: todoQues.name,\n            contestId: todoQues.contestId,\n            userName: userName\n        }\n        if (quesData.name !== '') {\n            axios.post(\"http://localhost:5000/list\", quesData).then(async (res) => {\n                // response = res;\n                console.log(\"todolistttttt     \\n\" + res);\n                await callData(userName, password, handle);\n                setLoading(false);\n                setToDoList(res.data);\n\n                // console.log(\"todolist \"+ toDoList);\n            })\n\n        }\n        // setLoading(false);\n    }, [todoQues])\n\n    useEffect(() => {\n        if (window.sessionStorage.getItem('userD')) {\n            setUserData(JSON.parse(window.sessionStorage.getItem('userD')));\n            setUserName(window.sessionStorage.getItem('userName'));\n        }\n    }, []);\n\n    useEffect(() => {\n        if (userData) {\n            let quesData = {\n                name: \"\",\n                contestId: \"\",\n                userName: userName\n            }\n            axios.post(\"http://localhost:5000/list\", quesData).then(response => {\n                setToDoList(response.data);\n            }).then(() => {\n                toogleSet(true);\n            })\n        };\n    }, [userData]);\n\n    useEffect(() => {\n        let quesData = {\n            name: removeQues.name,\n            contestId: removeQues.contestId,\n            userName: userName\n        }\n        if (quesData.contestId !== '') {\n            axios.post(\"http://localhost:5000/uwlist\", quesData).then(async response => {\n                await callData(userName, password, handle);\n                setLoading(false);\n                setToDoList(response.data);\n            })\n        }\n    }, [removeQues]);\n    function abc(event) {\n        setTodoQues({\n            name: document.getElementById(event.target.id).id,\n            contestId: document.getElementById(event.target.id).value\n        });\n        return null;\n    }\n\n    async function onclick(event) {\n        setLoading(true);\n        event.preventDefault();\n        setTodoQues({\n            name: document.getElementById(event.target.id).id,\n            contestId: document.getElementById(event.target.id).value\n        });\n    }\n\n    function handleclick(event) {\n        setLoading(true);\n        event.preventDefault();\n        if (document.getElementById(event.target.id) === null)\n            return;\n        setRemoveQues({\n            name: document.getElementById(event.target.id).value,\n            contestId: document.getElementById(event.target.id).id\n        });\n    }\n\n    function show(e, index) {\n        return (<div key={index.toString()}><a href={\"https://codeforces.com/problemset/problem/\" + e.contestId + \"/\" + e.index}>\n            <h2 className=\"h22\">{e.contestId + e.index} {e.name}</h2>\n        </a>\n            <button className=\"buttonclass\" id={e.name} value={e.contestId + e.index} onClick={onclick}>ADD</button>\n            <button className=\"buttonclass\" id={e.contestId + e.index} value={e.name} onClick={handleclick}>REMOVE</button>\n        </div>);\n    }\n\n    function logout() {\n        //setLogout(true);\n        sessionStorage.clear();\n        setUserData(null);\n        setUserName('');\n        toogleSet(false);\n        //setLogout(false);\n    }\n    function contest(contestId) {\n        //return \"hello\";\n        var n = contestId.length;\n        var str1 = '', str2 = '', i;\n        for (i = 0; i < n; i++) {\n            if (contestId[i] >= 0 && contestId[i] <= 9)\n                str1 += contestId[i];\n            else\n                break;\n        }\n        for (; i < n; i++)\n            str2 += contestId[i];\n\n        return str1 + '/' + str2;\n\n    }\n\n    function showToDoList(event, index) {\n        return (<div key={index.toString()}>\n            <a href={\"https://codeforces.com/problemset/problem/\" + contest(event.contestId)}>\n                <h2 className=\"h22\">{event.contestId} {event.name}</h2>\n            </a>\n            <button className=\"buttonclass\" id={event.contestId} value={event.name} onClick={handleclick}>REMOVE</button>\n        </div>)\n    }\n\n    return (\n        <div>\n            {loading ? <div className=\"loading\" /> : null}\n            {!dataSet ?\n                <form onSubmit={onSubmit} className=\"container\">\n                    <label>User Name</label>\n                    <input className=\"in\" id=\"UserName\" type=\"text\" name=\"userName\" spellCheck=\"false\" onChange={(e) => {\n                        setUserName(e.target.value);\n                    }} />\n                    <label>Password</label>\n                    <input className=\"in\" id=\"Password\" type=\"password\" name=\"password\" onChange={(e) => {\n                        setPassword(e.target.value);\n                    }} />\n                    <label>User Handle</label>\n                    <input className=\"in\" id=\"Handle\" type=\"text\" name=\"userHandle\" spellCheck=\"false\" onChange={(e) => {\n                        setHandle(e.target.value);\n                    }} />\n                    <button className=\"buttonclass\" type=\"submit\" className=\"submit\">Go</button>\n                </form> :\n                <div>\n\n                    <div className=\"row\">\n                        <h1 className=\"column\" id=\"h11\">User Rating: {userData.rating > 0 ? userData.rating : \"NA\"}</h1>\n                        <button id=\"buttonclass\" className=\"column\" onClick={logout} >Logout</button>\n                    </div>\n\n                    {userData.rating >= 0 ?\n\n                        <div className=\"row\">\n                            {loading ? <div className=\"loading\" /> : null}\n                            {userData.ques == 0 ?\n                                <h1 className=\"h11\">You Have not solved any question Yet</h1>\n                                : <div>\n                                    <div className=\"column\">\n                                        <h1 className=\"h11\">Questions: </h1>\n                                        {userData.ques.map(show)}\n                                    </div>\n                                    <div className=\"column\">\n                                        <h1 className=\"h11\">To Do List</h1>\n                                        {toDoList == null ? null : toDoList.map(showToDoList)}\n                                    </div>\n                                </div>\n\n\n                            }\n\n                        </div>\n                        : <div> {userData.rating == -1 ? <h2 className=\"h22\">Please Enter Valid Handle</h2> : <h2 className=\"h22\">User Name Already Exist...... Enter correct details for this user name or create a new Account</h2>}</div>\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Rate;","C:\\Users\\prate\\Desktop\\Resume Projects\\Wishes-High-Rating-master\\src\\index.js",[],"C:\\Users\\prate\\Desktop\\Resume Projects\\Wishes-High-Rating-master\\src\\App.jsx",[],"C:\\Users\\prate\\Desktop\\Resume Projects\\Wishes-High-Rating-master\\src\\Rate.jsx",["37","38","39","40","41","42","43"],{"ruleId":"44","severity":1,"message":"45","line":26,"column":13,"nodeType":"46","messageId":"47","endLine":26,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":53,"column":15,"nodeType":"50","endLine":72,"endColumn":6},{"ruleId":"48","severity":1,"message":"51","line":72,"column":8,"nodeType":"52","endLine":72,"endColumn":18,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"54","line":94,"column":8,"nodeType":"52","endLine":94,"endColumn":18,"suggestions":"55"},{"ruleId":"48","severity":1,"message":"51","line":109,"column":8,"nodeType":"52","endLine":109,"endColumn":20,"suggestions":"56"},{"ruleId":"44","severity":1,"message":"57","line":110,"column":14,"nodeType":"46","messageId":"47","endLine":110,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":198,"column":67,"nodeType":"60","endLine":198,"endColumn":85},{"ruleId":"61","severity":1,"message":"62","line":211,"column":44,"nodeType":"63","messageId":"64","endLine":211,"endColumn":46},{"ruleId":"61","severity":1,"message":"62","line":228,"column":50,"nodeType":"63","messageId":"64","endLine":228,"endColumn":52},{"ruleId":"44","severity":1,"message":"45","line":26,"column":13,"nodeType":"46","messageId":"47","endLine":26,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":53,"column":15,"nodeType":"50","endLine":72,"endColumn":6},{"ruleId":"48","severity":1,"message":"51","line":72,"column":8,"nodeType":"52","endLine":72,"endColumn":18,"suggestions":"65"},{"ruleId":"48","severity":1,"message":"54","line":94,"column":8,"nodeType":"52","endLine":94,"endColumn":18,"suggestions":"66"},{"ruleId":"48","severity":1,"message":"51","line":109,"column":8,"nodeType":"52","endLine":109,"endColumn":20,"suggestions":"67"},{"ruleId":"44","severity":1,"message":"57","line":110,"column":14,"nodeType":"46","messageId":"47","endLine":110,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":198,"column":67,"nodeType":"60","endLine":198,"endColumn":85},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'handle', 'password', and 'userName'. Either include them or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["69"],["70"],"'abc' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["71"],["72"],["73"],{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"74","fix":"80"},{"desc":"76","fix":"81"},{"desc":"78","fix":"82"},"Update the dependencies array to be: [handle, password, todoQues, userName]",{"range":"83","text":"84"},"Update the dependencies array to be: [userData, userName]",{"range":"85","text":"86"},"Update the dependencies array to be: [handle, password, removeQues, userName]",{"range":"87","text":"88"},{"range":"89","text":"84"},{"range":"90","text":"86"},{"range":"91","text":"88"},[2219,2229],"[handle, password, todoQues, userName]",[2877,2887],"[userData, userName]",[3361,3373],"[handle, password, removeQues, userName]",[2219,2229],[2877,2887],[3361,3373]]